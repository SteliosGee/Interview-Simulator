{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"state\", \"descriptors\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { HeaderShownContext, SafeAreaProviderCompat } from '@react-navigation/elements';\nimport { CommonActions, StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport { ModalPresentationContext } from \"../../utils/ModalPresentationContext.js\";\nimport { GestureHandlerRootView } from \"../GestureHandler\";\nimport { HeaderContainer } from \"../Header/HeaderContainer.js\";\nimport { CardStack } from \"./CardStack.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GestureHandlerWrapper = GestureHandlerRootView != null ? GestureHandlerRootView : View;\nvar isArrayEqual = function isArrayEqual(a, b) {\n  return a.length === b.length && a.every(function (it, index) {\n    return it === b[index];\n  });\n};\nexport var StackView = function (_React$Component) {\n  function StackView() {\n    var _this;\n    _classCallCheck(this, StackView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, StackView, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n    _defineProperty(_this, \"getPreviousRoute\", function (_ref) {\n      var route = _ref.route;\n      var _this$state = _this.state,\n        closingRouteKeys = _this$state.closingRouteKeys,\n        replacingRouteKeys = _this$state.replacingRouteKeys;\n      var routes = _this.state.routes.filter(function (r) {\n        return r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key);\n      });\n      var index = routes.findIndex(function (r) {\n        return r.key === route.key;\n      });\n      return routes[index - 1];\n    });\n    _defineProperty(_this, \"renderHeader\", function (props) {\n      return _jsx(HeaderContainer, _objectSpread({}, props));\n    });\n    _defineProperty(_this, \"handleOpenRoute\", function (_ref2) {\n      var route = _ref2.route;\n      var _this$props = _this.props,\n        state = _this$props.state,\n        navigation = _this$props.navigation;\n      var _this$state2 = _this.state,\n        closingRouteKeys = _this$state2.closingRouteKeys,\n        replacingRouteKeys = _this$state2.replacingRouteKeys;\n      if (closingRouteKeys.some(function (key) {\n        return key === route.key;\n      }) && replacingRouteKeys.every(function (key) {\n        return key !== route.key;\n      }) && state.routeNames.includes(route.name) && !state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.dispatch(function (state) {\n          var routes = [].concat(_toConsumableArray(state.routes.filter(function (r) {\n            return r.key !== route.key;\n          })), [route]);\n          return CommonActions.reset(_objectSpread(_objectSpread({}, state), {}, {\n            routes: routes,\n            index: routes.length - 1\n          }));\n        });\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.replacingRouteKeys.length ? state.routes.filter(function (r) {\n              return !state.replacingRouteKeys.includes(r.key);\n            }) : state.routes,\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            replacingRouteKeys: []\n          };\n        });\n      }\n    });\n    _defineProperty(_this, \"handleCloseRoute\", function (_ref3) {\n      var route = _ref3.route;\n      var _this$props2 = _this.props,\n        state = _this$props2.state,\n        navigation = _this$props2.navigation;\n      if (state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.pop()), {}, {\n          source: route.key,\n          target: state.key\n        }));\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.routes.filter(function (r) {\n              return r.key !== route.key;\n            }),\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            })\n          };\n        });\n      }\n    });\n    _defineProperty(_this, \"handleTransitionStart\", function (_ref4, closing) {\n      var route = _ref4.route;\n      return _this.props.navigation.emit({\n        type: 'transitionStart',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(_this, \"handleTransitionEnd\", function (_ref5, closing) {\n      var route = _ref5.route;\n      return _this.props.navigation.emit({\n        type: 'transitionEnd',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(_this, \"handleGestureStart\", function (_ref6) {\n      var route = _ref6.route;\n      _this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    });\n    _defineProperty(_this, \"handleGestureEnd\", function (_ref7) {\n      var route = _ref7.route;\n      _this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    });\n    _defineProperty(_this, \"handleGestureCancel\", function (_ref8) {\n      var route = _ref8.route;\n      _this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    });\n    return _this;\n  }\n  _inherits(StackView, _React$Component);\n  return _createClass(StackView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props3 = this.props,\n        state = _this$props3.state,\n        _ = _this$props3.descriptors,\n        rest = _objectWithoutProperties(_this$props3, _excluded);\n      var _this$state3 = this.state,\n        routes = _this$state3.routes,\n        descriptors = _this$state3.descriptors,\n        openingRouteKeys = _this$state3.openingRouteKeys,\n        closingRouteKeys = _this$state3.closingRouteKeys;\n      var preloadedDescriptors = state.preloadedRoutes.reduce(function (acc, route) {\n        acc[route.key] = acc[route.key] || _this2.props.describe(route, true);\n        return acc;\n      }, {});\n      return _jsx(GestureHandlerWrapper, {\n        style: styles.container,\n        children: _jsx(SafeAreaProviderCompat, {\n          children: _jsx(SafeAreaInsetsContext.Consumer, {\n            children: function children(insets) {\n              return _jsx(ModalPresentationContext.Consumer, {\n                children: function children(isParentModal) {\n                  return _jsx(HeaderShownContext.Consumer, {\n                    children: function children(isParentHeaderShown) {\n                      return _jsx(CardStack, _objectSpread({\n                        insets: insets,\n                        isParentHeaderShown: isParentHeaderShown,\n                        isParentModal: isParentModal,\n                        getPreviousRoute: _this2.getPreviousRoute,\n                        routes: routes,\n                        openingRouteKeys: openingRouteKeys,\n                        closingRouteKeys: closingRouteKeys,\n                        onOpenRoute: _this2.handleOpenRoute,\n                        onCloseRoute: _this2.handleCloseRoute,\n                        onTransitionStart: _this2.handleTransitionStart,\n                        onTransitionEnd: _this2.handleTransitionEnd,\n                        renderHeader: _this2.renderHeader,\n                        state: state,\n                        descriptors: descriptors,\n                        onGestureStart: _this2.handleGestureStart,\n                        onGestureEnd: _this2.handleGestureEnd,\n                        onGestureCancel: _this2.handleGestureCancel,\n                        preloadedDescriptors: preloadedDescriptors\n                      }, rest));\n                    }\n                  });\n                }\n              });\n            }\n          })\n        })\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(function (r) {\n        return r.key;\n      }), state.previousRoutes.map(function (r) {\n        return r.key;\n      }))) && state.routes.length) {\n        var _routes = state.routes;\n        var _previousRoutes = state.previousRoutes;\n        var _descriptors = props.descriptors;\n        var previousDescriptors = state.previousDescriptors;\n        if (props.descriptors !== state.previousDescriptors) {\n          _descriptors = state.routes.reduce(function (acc, route) {\n            acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n            return acc;\n          }, {});\n          previousDescriptors = props.descriptors;\n        }\n        if (props.state.routes !== state.previousRoutes) {\n          var map = props.state.routes.reduce(function (acc, route) {\n            acc[route.key] = route;\n            return acc;\n          }, {});\n          _routes = state.routes.map(function (route) {\n            return map[route.key] || route;\n          });\n          _previousRoutes = props.state.routes;\n        }\n        return {\n          routes: _routes,\n          previousRoutes: _previousRoutes,\n          descriptors: _descriptors,\n          previousDescriptors: previousDescriptors\n        };\n      }\n      var routes = props.state.index < props.state.routes.length - 1 ? props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n      var previousRoutes = state.previousRoutes;\n      var openingRouteKeys = state.openingRouteKeys,\n        closingRouteKeys = state.closingRouteKeys,\n        replacingRouteKeys = state.replacingRouteKeys;\n      var previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n      var nextFocusedRoute = routes[routes.length - 1];\n      var isAnimationEnabled = function isAnimationEnabled(key) {\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return descriptor ? descriptor.options.animation !== 'none' : true;\n      };\n      var getAnimationTypeForReplace = function getAnimationTypeForReplace(key) {\n        var _descriptor$options$a;\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return (_descriptor$options$a = descriptor.options.animationTypeForReplace) != null ? _descriptor$options$a : 'push';\n      };\n      if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n        if (previousRoutes.some(function (r) {\n          return r.key === nextFocusedRoute.key;\n        }) && !routes.some(function (r) {\n          return r.key === previousFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n            closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n            openingRouteKeys = openingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n          }\n        } else {\n          if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n            openingRouteKeys = [].concat(_toConsumableArray(openingRouteKeys), [nextFocusedRoute.key]);\n            closingRouteKeys = closingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            if (!routes.some(function (r) {\n              return r.key === previousFocusedRoute.key;\n            })) {\n              openingRouteKeys = openingRouteKeys.filter(function (key) {\n                return key !== previousFocusedRoute.key;\n              });\n              if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n                closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n                openingRouteKeys = openingRouteKeys.filter(function (key) {\n                  return key !== nextFocusedRoute.key;\n                });\n                routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n              } else {\n                replacingRouteKeys = [].concat(_toConsumableArray(replacingRouteKeys), [previousFocusedRoute.key]);\n                closingRouteKeys = closingRouteKeys.filter(function (key) {\n                  return key !== previousFocusedRoute.key;\n                });\n                routes = routes.slice();\n                routes.splice(routes.length - 1, 0, previousFocusedRoute);\n              }\n            }\n          }\n        }\n      } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n        var _routes2;\n        routes = routes.slice();\n        (_routes2 = routes).splice.apply(_routes2, [routes.length - 1, 0].concat(_toConsumableArray(state.routes.filter(function (_ref9) {\n          var key = _ref9.key;\n          return isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false;\n        }))));\n      }\n      if (!routes.length) {\n        throw new Error('There should always be at least one route in the navigation state.');\n      }\n      var descriptors = routes.reduce(function (acc, route) {\n        acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n        return acc;\n      }, {});\n      return {\n        routes: routes,\n        previousRoutes: props.state.routes,\n        previousDescriptors: props.descriptors,\n        openingRouteKeys: openingRouteKeys,\n        closingRouteKeys: closingRouteKeys,\n        replacingRouteKeys: replacingRouteKeys,\n        descriptors: descriptors\n      };\n    }\n  }]);\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["HeaderShownContext","SafeAreaProviderCompat","CommonActions","StackActions","React","StyleSheet","View","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","jsx","_jsx","GestureHandlerWrapper","isArrayEqual","a","b","length","every","it","index","StackView","_React$Component","_this","_classCallCheck","_len","arguments","args","Array","_key","_callSuper","concat","_defineProperty","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","_ref","route","_this$state","state","filter","r","key","includes","findIndex","props","_objectSpread","_ref2","_this$props","navigation","_this$state2","some","routeNames","name","dispatch","_toConsumableArray","reset","setState","_ref3","_this$props2","pop","source","target","_ref4","closing","emit","type","data","_ref5","_ref6","_ref7","_ref8","_inherits","_createClass","value","render","_this2","_this$props3","_","rest","_objectWithoutProperties","_excluded","_this$state3","preloadedDescriptors","preloadedRoutes","reduce","acc","describe","style","styles","container","children","Consumer","insets","isParentModal","isParentHeaderShown","getPreviousRoute","onOpenRoute","handleOpenRoute","onCloseRoute","handleCloseRoute","onTransitionStart","handleTransitionStart","onTransitionEnd","handleTransitionEnd","renderHeader","onGestureStart","handleGestureStart","onGestureEnd","handleGestureEnd","onGestureCancel","handleGestureCancel","getDerivedStateFromProps","map","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","descriptor","options","animation","getAnimationTypeForReplace","_descriptor$options$a","animationTypeForReplace","splice","_routes2","apply","_ref9","Error","Component","create","flex"],"sources":["D:\\FROM_HDD\\PC_Backup\\DUTH\\THESIS\\new\\node_modules\\@react-navigation\\stack\\src\\views\\Stack\\StackView.tsx"],"sourcesContent":["import {\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  CommonActions,\n  type LocaleDirection,\n  type ParamListBase,\n  type Route,\n  type RouteProp,\n  StackActions,\n  type StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport type {\n  StackDescriptor,\n  StackDescriptorMap,\n  StackNavigationConfig,\n  StackNavigationHelpers,\n} from '../../types';\nimport { ModalPresentationContext } from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport {\n  HeaderContainer,\n  type Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport { CardStack } from './CardStack';\n\ntype Props = StackNavigationConfig & {\n  direction: LocaleDirection;\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n  describe: (\n    route: RouteProp<ParamListBase>,\n    placeholder: boolean\n  ) => StackDescriptor;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    const { previousRoutes } = state;\n\n    let { openingRouteKeys, closingRouteKeys, replacingRouteKeys } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animation !== 'none' : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (\n        previousRoutes.some((r) => r.key === nextFocusedRoute.key) &&\n        !routes.some((r) => r.key === previousFocusedRoute.key)\n      ) {\n        // The previously focused route was removed, and the new focused route was already present\n        // We treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // A route has come to the focus, we treat this as a push\n        // A replace or rearranging can also trigger this\n        // The animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.dispatch((state) => {\n        const routes = [\n          ...state.routes.filter((r) => r.key !== route.key),\n          route,\n        ];\n\n        return CommonActions.reset({\n          ...state,\n          routes,\n          index: routes.length - 1,\n        });\n      });\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const { routes, descriptors, openingRouteKeys, closingRouteKeys } =\n      this.state;\n\n    const preloadedDescriptors =\n      state.preloadedRoutes.reduce<StackDescriptorMap>((acc, route) => {\n        acc[route.key] = acc[route.key] || this.props.describe(route, true);\n        return acc;\n      }, {});\n\n    return (\n      <GestureHandlerWrapper style={styles.container}>\n        <SafeAreaProviderCompat>\n          <SafeAreaInsetsContext.Consumer>\n            {(insets) => (\n              <ModalPresentationContext.Consumer>\n                {(isParentModal) => (\n                  <HeaderShownContext.Consumer>\n                    {(isParentHeaderShown) => (\n                      <CardStack\n                        insets={insets!}\n                        isParentHeaderShown={isParentHeaderShown}\n                        isParentModal={isParentModal}\n                        getPreviousRoute={this.getPreviousRoute}\n                        routes={routes}\n                        openingRouteKeys={openingRouteKeys}\n                        closingRouteKeys={closingRouteKeys}\n                        onOpenRoute={this.handleOpenRoute}\n                        onCloseRoute={this.handleCloseRoute}\n                        onTransitionStart={this.handleTransitionStart}\n                        onTransitionEnd={this.handleTransitionEnd}\n                        renderHeader={this.renderHeader}\n                        state={state}\n                        descriptors={descriptors}\n                        onGestureStart={this.handleGestureStart}\n                        onGestureEnd={this.handleGestureEnd}\n                        onGestureCancel={this.handleGestureCancel}\n                        preloadedDescriptors={preloadedDescriptors}\n                        {...rest}\n                      />\n                    )}\n                  </HeaderShownContext.Consumer>\n                )}\n              </ModalPresentationContext.Consumer>\n            )}\n          </SafeAreaInsetsContext.Consumer>\n        </SafeAreaProviderCompat>\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}