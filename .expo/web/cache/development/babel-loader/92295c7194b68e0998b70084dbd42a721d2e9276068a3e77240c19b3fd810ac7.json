{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"children\", \"containerStyle\", \"contentStyle\", \"closing\", \"direction\", \"gestureResponseDistance\", \"gestureVelocityImpact\", \"onClose\", \"onGestureBegin\", \"onGestureCanceled\", \"onGestureEnd\", \"onOpen\", \"onTransition\", \"transitionSpec\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CardAnimationContext } from \"../../utils/CardAnimationContext.js\";\nimport { getDistanceForDirection } from \"../../utils/getDistanceForDirection.js\";\nimport { getInvertedMultiplier } from \"../../utils/getInvertedMultiplier.js\";\nimport { getShadowStyle } from \"../../utils/getShadowStyle.js\";\nimport { memoize } from \"../../utils/memoize.js\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport { CardSheet } from \"./CardSheet.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nexport var Card = function (_React$Component) {\n  function Card() {\n    var _this;\n    _classCallCheck(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Card, [].concat(args));\n    _defineProperty(_this, \"isCurrentlyMounted\", false);\n    _defineProperty(_this, \"isClosing\", new Animated.Value(FALSE));\n    _defineProperty(_this, \"inverted\", new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection, _this.props.direction === 'rtl')));\n    _defineProperty(_this, \"layout\", {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    });\n    _defineProperty(_this, \"isSwiping\", new Animated.Value(FALSE));\n    _defineProperty(_this, \"interactionHandle\", void 0);\n    _defineProperty(_this, \"pendingGestureCallback\", void 0);\n    _defineProperty(_this, \"lastToValue\", void 0);\n    _defineProperty(_this, \"animate\", function (_ref) {\n      var closing = _ref.closing,\n        velocity = _ref.velocity;\n      var _this$props = _this.props,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransition = _this$props.onTransition,\n        gesture = _this$props.gesture;\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition == null ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    });\n    _defineProperty(_this, \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n        layout = _ref3.layout,\n        gestureDirection = _ref3.gestureDirection,\n        direction = _ref3.direction,\n        preloaded = _ref3.preloaded;\n      if (!closing && !preloaded) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection, direction === 'rtl');\n    });\n    _defineProperty(_this, \"setPointerEventsEnabled\", function (enabled) {\n      var _this$ref$current;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) == null ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    });\n    _defineProperty(_this, \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty(_this, \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty(_this, \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props2 = _this.props,\n        direction = _this$props2.direction,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin == null ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n        case GestureState.FAILED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled == null ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection, direction === 'rtl') > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd == null ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty(_this, \"getInterpolatedStyle\", memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    }));\n    _defineProperty(_this, \"getCardAnimation\", memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n    _defineProperty(_this, \"ref\", React.createRef());\n    return _this;\n  }\n  _inherits(Card, _React$Component);\n  return _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.preloaded) {\n        this.animate({\n          closing: this.props.closing\n        });\n      }\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        gesture = _this$props3.gesture,\n        direction = _this$props3.direction,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        opening = _this$props3.opening,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection, direction === 'rtl'));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      } else if (opening && !prevProps.opening) {\n        gesture.setValue(getDistanceForDirection(layout, gestureDirection, direction === 'rtl'));\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props$gesture;\n      (_this$props$gesture = this.props.gesture) == null ? void 0 : _this$props$gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        direction = _this$props4.direction,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection, direction === 'rtl');\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        interpolationIndex = _this$props5.interpolationIndex,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        closing = _this$props5.closing,\n        direction = _this$props5.direction,\n        gestureResponseDistance = _this$props5.gestureResponseDistance,\n        gestureVelocityImpact = _this$props5.gestureVelocityImpact,\n        onClose = _this$props5.onClose,\n        onGestureBegin = _this$props5.onGestureBegin,\n        onGestureCanceled = _this$props5.onGestureCanceled,\n        onGestureEnd = _this$props5.onGestureEnd,\n        onOpen = _this$props5.onOpen,\n        onTransition = _this$props5.onTransition,\n        transitionSpec = _this$props5.transitionSpec,\n        rest = _objectWithoutProperties(_this$props5, _excluded);\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return _jsxs(CardAnimationContext.Provider, {\n        value: interpolationProps,\n        children: [_jsx(Animated.View, {\n          style: {\n            opacity: current\n          },\n          collapsable: false\n        }), _jsxs(View, _objectSpread(_objectSpread({\n          pointerEvents: \"box-none\",\n          collapsable: false\n        }, rest), {}, {\n          children: [overlayEnabled ? _jsx(View, {\n            pointerEvents: \"box-none\",\n            style: StyleSheet.absoluteFill,\n            children: overlay({\n              style: overlayStyle\n            })\n          }) : null, _jsx(Animated.View, {\n            style: [styles.container, containerStyle, customContainerStyle],\n            pointerEvents: \"box-none\",\n            children: _jsx(PanGestureHandler, _objectSpread(_objectSpread({\n              enabled: layout.width !== 0 && gestureEnabled,\n              onGestureEvent: handleGestureEvent,\n              onHandlerStateChange: this.handleGestureStateChange\n            }, this.gestureActivationCriteria()), {}, {\n              children: _jsxs(Animated.View, {\n                needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n                style: [styles.container, cardStyle],\n                children: [shadowEnabled && shadowStyle && !isTransparent ? _jsx(Animated.View, {\n                  style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowStart] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowEnd] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n                    backgroundColor: backgroundColor\n                  }, shadowStyle],\n                  pointerEvents: \"none\"\n                }) : null, _jsx(CardSheet, {\n                  ref: this.ref,\n                  enabled: pageOverflowEnabled,\n                  layout: layout,\n                  style: contentStyle,\n                  children: children\n                })]\n              })\n            }))\n          })]\n        }))]\n      });\n    }\n  }]);\n}(React.Component);\n_defineProperty(Card, \"defaultProps\", {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? _jsx(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute'\n  },\n  shadowHorizontal: _objectSpread({\n    top: 0,\n    bottom: 0,\n    width: 3\n  }, getShadowStyle({\n    offset: {\n      width: -1,\n      height: 1\n    },\n    radius: 5,\n    opacity: 0.3\n  })),\n  shadowStart: {\n    start: 0\n  },\n  shadowEnd: {\n    end: 0\n  },\n  shadowVertical: _objectSpread({\n    start: 0,\n    end: 0,\n    height: 3\n  }, getShadowStyle({\n    offset: {\n      width: 1,\n      height: -1\n    },\n    radius: 5,\n    opacity: 0.3\n  })),\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","getShadowStyle","memoize","GestureState","PanGestureHandler","CardSheet","jsx","_jsx","jsxs","_jsxs","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","Value","props","gestureDirection","direction","width","layout","height","_ref","closing","velocity","_this$props","transitionSpec","onOpen","onClose","onTransition","gesture","toValue","getAnimateToValue","_objectSpread","lastToValue","isClosing","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","_ref2","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","_ref3","preloaded","enabled","_this$ref$current","pointerEvents","ref","current","setPointerEvents","interactionHandle","createInteractionHandle","clearInteractionHandle","_ref4","nativeEvent","_this$props2","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","isSwiping","CANCELLED","FAILED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","_inherits","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","_this$props3","opening","componentWillUnmount","_this$props$gesture","stopAnimation","gestureActivationCriteria","_this$props4","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props5","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties","_excluded","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","backgroundColor","isTransparent","alpha","Provider","collapsable","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","handleGestureStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowStart","shadowEnd","shadowVertical","shadowTop","shadowBottom","Component","_ref5","create","flex","position","offset","radius","end"],"sources":["D:\\FROM_HDD\\PC_Backup\\DUTH\\THESIS\\new\\node_modules\\@react-navigation\\stack\\src\\views\\Stack\\Card.tsx"],"sourcesContent":["import type { LocaleDirection } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  View,\n  type ViewProps,\n  type ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport { CardAnimationContext } from '../../utils/CardAnimationContext';\nimport { getDistanceForDirection } from '../../utils/getDistanceForDirection';\nimport { getInvertedMultiplier } from '../../utils/getInvertedMultiplier';\nimport { getShadowStyle } from '../../utils/getShadowStyle';\nimport { memoize } from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  type PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport { CardSheet, type CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  opening: boolean;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation<number>;\n  current: Animated.AnimatedInterpolation<number>;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  direction: LocaleDirection;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  preloaded: boolean;\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    if (!this.props.preloaded) {\n      this.animate({\n        closing: this.props.closing,\n      });\n    }\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { gesture, direction, layout, gestureDirection, opening, closing } =\n      this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(\n        getInvertedMultiplier(gestureDirection, direction === 'rtl')\n      );\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // The route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    } else if (opening && !prevProps.opening) {\n      // This can happen when screen somewhere below in the stack comes into focus via rearranging\n      // Also reset the animated value to make sure that the animation starts from the beginning\n      gesture.setValue(\n        getDistanceForDirection(layout, gestureDirection, direction === 'rtl')\n      );\n\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture?.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(\n      this.props.gestureDirection,\n      this.props.direction === 'rtl'\n    )\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { transitionSpec, onOpen, onClose, onTransition, gesture } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n    direction,\n    preloaded,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n    direction: LocaleDirection;\n    preloaded: boolean;\n  }) => {\n    if (!closing && !preloaded) {\n      return 0;\n    }\n\n    return getDistanceForDirection(\n      layout,\n      gestureDirection,\n      direction === 'rtl'\n    );\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      direction,\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED:\n      case GestureState.FAILED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({\n          closing: this.props.closing,\n          velocity,\n        });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection, direction === 'rtl') >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation<number>,\n      next: Animated.AnimatedInterpolation<number> | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { direction, layout, gestureDirection, gestureResponseDistance } =\n      this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n            gestureDirection === 'vertical-inverted'\n          ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n          : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(\n        gestureDirection,\n        direction === 'rtl'\n      );\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      closing,\n      direction,\n      gestureResponseDistance,\n      gestureVelocityImpact,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      onOpen,\n      onTransition,\n      transitionSpec,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View\n          pointerEvents=\"box-none\"\n          // Make sure this view is not removed on the new architecture, as it causes focus loss during navigation on Android.\n          // This can happen when the view flattening results in different trees - due to `overflow` style changing in a parent.\n          collapsable={false}\n          {...rest}\n        >\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowStart]\n                        : gestureDirection === 'horizontal-inverted'\n                          ? [styles.shadowHorizontal, styles.shadowEnd]\n                          : gestureDirection === 'vertical'\n                            ? [styles.shadowVertical, styles.shadowTop]\n                            : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    ...getShadowStyle({\n      offset: {\n        width: -1,\n        height: 1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowStart: {\n    start: 0,\n  },\n  shadowEnd: {\n    end: 0,\n  },\n  shadowVertical: {\n    start: 0,\n    end: 0,\n    height: 3,\n    ...getShadowStyle({\n      offset: {\n        width: 1,\n        height: -1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}