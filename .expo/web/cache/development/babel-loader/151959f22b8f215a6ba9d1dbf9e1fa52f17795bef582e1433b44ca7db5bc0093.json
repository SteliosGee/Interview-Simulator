{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar lightTheme = {\n  background: '#FFFFFF',\n  text: '#000000',\n  textMuted: '#666666',\n  primary: '#007AFF',\n  onPrimary: '#FFFFFF',\n  card: '#F0F0F0'\n};\nvar darkTheme = {\n  background: '#1C1C1E',\n  text: '#FFFFFF',\n  textMuted: '#888888',\n  primary: '#0A84FF',\n  onPrimary: '#FFFFFF',\n  card: '#2C2C2E'\n};\nvar ThemeContext = createContext({\n  colors: lightTheme,\n  toggleTheme: function toggleTheme() {}\n});\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDark = _useState2[0],\n    setIsDark = _useState2[1];\n  var toggleTheme = function toggleTheme() {\n    setIsDark(!isDark);\n  };\n  var theme = isDark ? darkTheme : lightTheme;\n  return _jsx(ThemeContext.Provider, {\n    value: {\n      colors: theme,\n      toggleTheme: toggleTheme\n    },\n    children: children\n  });\n};\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","lightTheme","background","text","textMuted","primary","onPrimary","card","darkTheme","ThemeContext","colors","toggleTheme","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","isDark","setIsDark","theme","Provider","value","useTheme"],"sources":["D:/FROM_HDD/PC_Backup/DUTH/THESIS/new/components/ThemeProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst lightTheme = {\n  background: '#FFFFFF',\n  text: '#000000',\n  textMuted: '#666666',\n  primary: '#007AFF',\n  onPrimary: '#FFFFFF',\n  card: '#F0F0F0',\n};\n\nconst darkTheme = {\n  background: '#1C1C1E',\n  text: '#FFFFFF',\n  textMuted: '#888888',\n  primary: '#0A84FF',\n  onPrimary: '#FFFFFF',\n  card: '#2C2C2E',\n};\n\nconst ThemeContext = createContext({\n  colors: lightTheme,\n  toggleTheme: () => {},\n});\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(false);\n\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  const theme = isDark ? darkTheme : lightTheme;\n\n  return (\n    <ThemeContext.Provider value={{ colors: theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEnE,IAAMC,UAAU,GAAG;EACjBC,UAAU,EAAE,SAAS;EACrBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAE,SAAS;EACpBC,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE,SAAS;EACpBC,IAAI,EAAE;AACR,CAAC;AAED,IAAMC,SAAS,GAAG;EAChBN,UAAU,EAAE,SAAS;EACrBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAE,SAAS;EACpBC,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE,SAAS;EACpBC,IAAI,EAAE;AACR,CAAC;AAED,IAAME,YAAY,GAAGb,aAAa,CAAC;EACjCc,MAAM,EAAET,UAAU;EAClBU,WAAW,EAAE,SAAbA,WAAWA,CAAA,EAAQ,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtC,IAAAC,SAAA,GAA4BjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAML,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBQ,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,IAAME,KAAK,GAAGF,MAAM,GAAGV,SAAS,GAAGP,UAAU;EAE7C,OACED,IAAA,CAACS,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEZ,MAAM,EAAEU,KAAK;MAAET,WAAW,EAAXA;IAAY,CAAE;IAAAG,QAAA,EAC1DA;EAAQ,CACY,CAAC;AAE5B,CAAC;AAED,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAAS1B,UAAU,CAACY,YAAY,CAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}