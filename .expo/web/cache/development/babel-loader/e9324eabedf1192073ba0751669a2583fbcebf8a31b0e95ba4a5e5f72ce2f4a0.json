{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport HomePage from \"../screens/HomePage\";\nimport InterviewPage from \"../screens/InterviewPage\";\nimport PreInterviewPage from \"../screens/PreInterviewPage\";\nimport ProfilePage from \"../screens/ProfilePage\";\nimport SettingsPage from \"../screens/SettingsPage\";\nimport { useTheme } from \"../components/ThemeProvider\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar HomeStack = function HomeStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: HomePage\n    }), _jsx(Stack.Screen, {\n      name: \"Interview\",\n      component: InterviewPage\n    }), _jsx(Stack.Screen, {\n      name: \"PreInterview\",\n      component: PreInterviewPage\n    })]\n  });\n};\nexport default function AppNavigator() {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: colors.primary,\n        tabBarInactiveTintColor: colors.textMuted,\n        tabBarStyle: {\n          backgroundColor: colors.background\n        },\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeStack\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfilePage\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsPage\n    })]\n  });\n}","map":{"version":3,"names":["React","createBottomTabNavigator","createStackNavigator","Ionicons","HomePage","InterviewPage","PreInterviewPage","ProfilePage","SettingsPage","useTheme","jsx","_jsx","jsxs","_jsxs","Tab","Stack","HomeStack","Navigator","screenOptions","headerShown","children","Screen","name","component","AppNavigator","_useTheme","colors","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarActiveTintColor","primary","tabBarInactiveTintColor","textMuted","tabBarStyle","backgroundColor","background"],"sources":["D:/FROM_HDD/PC_Backup/DUTH/THESIS/new/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport HomePage from '../screens/HomePage';\r\nimport InterviewPage from '../screens/InterviewPage';\r\nimport PreInterviewPage from '../screens/PreInterviewPage';\r\nimport ProfilePage from '../screens/ProfilePage';\r\nimport SettingsPage from '../screens/SettingsPage';\r\nimport { useTheme } from '../components/ThemeProvider';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nconst HomeStack = () => (\r\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n    <Stack.Screen name=\"HomeScreen\" component={HomePage} />\r\n    <Stack.Screen name=\"Interview\" component={InterviewPage} />\r\n    <Stack.Screen name=\"PreInterview\" component={PreInterviewPage} />\r\n  </Stack.Navigator>\r\n);\r\n\r\nexport default function AppNavigator() {\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Home') {\r\n            iconName = focused ? 'home' : 'home-outline';\r\n          } else if (route.name === 'Profile') {\r\n            iconName = focused ? 'person' : 'person-outline';\r\n          } else if (route.name === 'Settings') {\r\n            iconName = focused ? 'settings' : 'settings-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: colors.primary,\r\n        tabBarInactiveTintColor: colors.textMuted,\r\n        tabBarStyle: { backgroundColor: colors.background },\r\n        headerShown: false, // Hide header for all tabs\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeStack} />\r\n      <Tab.Screen name=\"Profile\" component={ProfilePage} />\r\n      <Tab.Screen name=\"Settings\" component={SettingsPage} />\r\n    </Tab.Navigator>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}